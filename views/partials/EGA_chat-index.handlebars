      <div class="panel panel-primary" id="chatPage">

            <div  class="panel-heading text-center" 
                  id="accordion" 
                  data-toggle="collapse" 
                  data-parent="#accordion" 
                  href="#collapseOne">

                  <button class="btn btn-success" id="chatButton">
                        CHAT
                  </button>

            </div>

            <div class="panel-collapse collapse" id="collapseOne">

                  <div class="container containerAll">

                        <div class="row">

                              <div class="col-md-4" id="userFormArea">

                                    <form id="userForm">

                                          <div class="form-group">
                                                <label>Enter Username:</label>

                                                <input class="form-control" id="chatUsername">
                                                <br />
                                                <input      type="submit" 
                                                            class="btn btn-primary" 
                                                            value="Login">
                                          </div>
                                    </form>
                              </div>
                        </div>

                        <div class="container" id="chatContainer">

                              <div class="row" id="messageArea">

                                    <div class="col-md-4">

                                          <div class="card card-body bg-light">

                                                <h4 id="usersOnlineH4">USERS ONLINE:</h4>
                                                <ul class="list-group" id="users">
                                                </ul>
                                                <button class="btn-small btn-success conBtns" id="disconnectButton">
                                                      DISCONNECT
                                                </button>
                                                <button class="btn-small btn-success conBtns" id="connectButton">
                                                      CONNECT
                                                </button>

                                                <h5 id="connectionStatus"></h5>
                                          </div>
                                    </div>

                                    <div class="col-md-8">

                                          <div class="chatWindow" id="chatWindow">

                                                <div class="chat" id="chat">

                                                </div>
                                          </div>

                                          <form id="messageForm">

                                                <div class="form-group">
                                                      <label>Enter Message</label>
                                                      <textarea class="form-control" id="message">

                                                      </textarea>
                                                      <br />
                                                      <input      type="submit" 
                                                                  class="btn btn-primary"
                                                                  id="messageButton" 
                                                                  value="send message">
                                                </div>
                                          </form>

                                    </div>
                              </div>
                        </div>
                  </div>
            </div>
      </div>
      <!--div style="background: green; width: 600px; height: 600px; margin: auto;">box</div-->
          <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.1.1/socket.io.js"></script>
          
      <script>

            $(function () {

                  var socket = io.connect();
                  // Grab all html pointers 
                  var $messageForm = $("#messageForm");
                  var $message = $("#message");
                  var $chat = $("#chat");
                  var $disconnect = $("#disconnectButton")
                  var $chatWindow = $("#chatWindow");
                  var $messageArea = $("#messageArea");
                  var $userFormArea = $("#userFormArea");
                  var $userForm = $("#userForm");
                  var $users = $("#users");
                  var $chatUsername = $("#chatUsername");
                  var $connect = $("#connectionStatus");

                  // When the form is submitted, the request will be captured by the server side "socket.on 'send message'". Once the server processes the request, it will emit something called 'new message'. The data it will emit, is the value of the text area above, since it is referencing the 'send message value.. 
                  // Finally, we have to catch this emitted message here on the clientside using the below function. Lastly, we clear the text area value.

                  $messageForm.submit(function (e) {
                        e.preventDefault();
                        socket.emit("send message", $message.val());
                        $message.val("");
                  });
                  
                  // Allows user to simply press enter at the login screen instead of hitting the submit button.
                  $('#message').keypress(function (e) {
                        console.log(e.which);
                        if (e.which == 13) {
                              socket.emit("send message", $message.val());
                              $message.val("");
                              return false;
                        }
                  });
                  

                  $("#disconnectButton").click(function(){
                        socket.disconnect();
                        $connect.text("You are disconnected...")
                        //$('#chatPage').load(document.URL +  ' #chatPage');
                       // $("#chatPage").load(location.href);// + " #chatPage");
                       window.location.reload();
                  });
                  $("#connectButton").click(function(){
                        socket.connect();
                        $connect.text("You are connected...")
                  });

                  socket.on("new message", function (data) {
                        $chat.append('<div class="chatMessage card card-body bg-light"><strong>' + data.user + ':</strong>' + data.msg + '</div>');
                        updateScroll();
                  })

                  // When the user puts in their username, this form emits a new user method with the value input by the user. The server packages this input and runs a function that updates the username array. This current function continues on to say that if the server has pushed back the data it has processed, hide the login information and display the message area.
                  $userForm.submit(function (e) {
                        e.preventDefault();
                        socket.emit("new user", $chatUsername.val(), function (data) {
                              if (data) {
                                    $userFormArea.hide();
                                    $messageArea.css('display', 'flex');
                              }
                        });
                        
                        // Clear the value of username so that a new user has a blank login.
                        $chatUsername.val("");
                  });
                  // When the function above that updates the usernames is run it emits a get users method with the users array attached to it. It is then caught by the function below. This listens for that emitted event and runs this function which loops through the array, and for each username, creates an html list item which it then pushes to the user area.
                  socket.on("get users", function (data) {
                        var html = "";
                        for (i = 0; i < data.length; i++) {
                              html += '<li class="list-group-item">' + data[i] + '</li>';
                        }
                        $users.html(html);
                  })
                  // Ensures that the scroll overflow is always kept at it's lowest point. This way, all new messages originate from a static point just above the message box.
                  function updateScroll() {
                        var scroll = document.getElementById("chatWindow");
                        scroll.scrollTop = scroll.scrollHeight;
                  }
            });
            </script>